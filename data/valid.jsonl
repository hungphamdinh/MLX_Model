{"text":"File: AddOrEditAsset/DetailTab.js, Q: What does the defaultValues object initialize in DetailTab? A: It sets initial values for many fields including assetName, assetCode, assetType (null), purchasedDate (null), price (object with text and rawValue), serialNumber, warrantDate, description, companyCode, companyName, companyAddress, companyPhone, code, unitLocation, inventoryBrand (null), locationType ([1] by default), a reminder object (with emails array, isActive flag, users array and reminderDay), files (empty array), assetCreationTime and model."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: Which fields are marked as required in the Yup validation schema? A: The schema requires assetName and description as non-empty strings and assetType as a non-null object."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How is the isIMT boolean computed and what does it represent? A: It’s true when editing (!isAddNew) and assetDetail.referenceId has length > 0, indicating an imported asset with some disabled fields."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What value is assigned to the price field by default? A: { text: '0', rawValue: 0 } (zero cost in both display and numeric form)."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How are asset types loaded into the form? A: On mount useAsset().getAssetTypes({page:1,keyword:''}) and then again via FormLazyDropdown on scroll/search."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How are employees retrieved for the reminder dropdown? A: The parent screen calls getEmployees() and FormLazyDropdown passes that callback to load more on scroll/search."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What role does the useFile hook play in DetailTab? A: It provides getFileReference, resetFiles on unmount, and fileUrls which sync into the form’s files field."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does getInitialValueForUpdate construct initial form values for editing? A: It maps assetDetail into form fields, parsing dates, splitting company details, formatting price, converting reminders, and wrapping locationType in an array."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What parameters are passed to the API when submitting the form? A: Spreads form values, then overrides locationId, unitId, first locationType, price.rawValue, companyId, assetTypeId, inventoryBrandId, and reminder userIds/minutes."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does addEmailAndResetInput update the reminder emails? A: It appends watch('userEmail') to reminder.emails via setValue, then clears userEmail."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What does the removeEmail function do? A: It filters out the email at the given index from reminder.emails and updates the form field with the new array."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does onCheckEmail validate and add an email? A: It reads userEmail, validates with validateEmail, shows an error modal if invalid, otherwise calls addEmailAndResetInput."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What options are provided for locationTypes and how are they used? A: Two options: unit location (value 1) and common location (value 0), passed to FormRadioGroup to choose locationType."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does getDefaultEmployees build the display title for the employee dropdown? A: It maps each reminder user’s displayName and joins with commas, returning an empty string if none."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: Which useEffect fetches asset types on mount? A: An effect with empty deps calls getAssetTypes({page:1,keyword:''}) on component mount."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does the component handle updates to uploaded files? A: A useEffect watches fileUrls.length; when nonzero, it sets form field files to fileUrls; cleanup resets files on unmount."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: When does the form reset to updated values? A: A useEffect listening to assetDetail calls formMethods.reset(getInitialValueForUpdate()) whenever assetDetail changes."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What utility functions handle date conversions for reminders? A: minutesToDays converts reminderInMinutes to reminderDay, and daysToMinutes converts back before submission."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How is the price represented in the form and converted for submission? A: As {text,rawValue}; the rawValue numeric is sent to the API."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What company fields become read-only inputs after selection? A: companyCode, companyAddress and companyPhone are populated and rendered with editable={false}."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: Which additional fields are shown only when editing an asset? A: TextBox for active/inactive status and a read-only asset code input under the info section when !isAddNew."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What controls whether the reminder inputs are visible? A: A FormSwitch bound to reminder.isActive toggles visibility of reminder fields when on."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does the form change when qrFeedbackSetting.isEmbedExternalWebsite is true? A: It renders a simplified view with only name, code, creation time, locationType and suggestion pickers, omitting brand, price and reminder."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: Under what condition is the save button rendered? A: Only if readOnly is false; it calls formMethods.handleSubmit(onSubmit) and labels with I18n.t('AD_COMMON_SAVE')."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does the component decide whether to show a unit or location selector? A: It checks the first element of locationType array: AssetLocationType.Unit shows unit picker, else location picker."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What is the purpose of FormDisabledProvider in DetailTab? A: It disables all form inputs when disabled prop is true (based on readOnly), preventing edits."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does the reminder section allow removing an email? A: Each email is rendered with ItemUserEmail passing onPressRemove that calls removeEmail(index)."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How are date fields such as purchasedDate, warrantDate and assetCreationTime represented? A: Using FormDate mode=\"date\"; purchased and warrant editable unless disabled, creationTime always disabled."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What happens after a successful submission? A: onSubmit awaits submitRequest; on success NavigationService.goBack() and DeviceEventEmitter.emit('ReloadAsset')."}
{"text":"File: AddOrEditAsset.js, Q: How does the component determine whether it is adding a new asset or editing? A: It checks navigation.state.routeName !== 'detailAssets' to set isAddNew."}
{"text":"File: AddOrEditAsset.js, Q: What data is provided by the useAsset hook? A: assetDetail state and actions getAssetDetail(id) and resetAssetDetail()."}
{"text":"File: AddOrEditAsset.js, Q: Why does the component call getEmployees from useUser? A: To fetch employees on mount for the reminder dropdown in DetailTab."}
{"text":"File: AddOrEditAsset.js, Q: What purpose does the tabIndex state serve? A: Tracks selected tab, determining which content (Detail, PM history, JR history, plan list, inspection history) to render."}
{"text":"File: AddOrEditAsset.js, Q: How is the array of tab labels defined and what do they represent? A: ['AD_ASSETS_TAB_DETAIL','PM_HISTORY','JR_HISTORY','AD_ASSETS_TAB_LIST','INSPECTION_HISTORY'] mapping to detail, preventive, job request, plan list, inspection."}
{"text":"File: AddOrEditAsset.js, Q: What does otherModule represent and how is it determined? A: assetDetail?.moduleId; indicates origin module to restrict editing and adjust tabs if from Work Order or Plan Maintenance."}
{"text":"File: AddOrEditAsset.js, Q: How does tabValues decide which tabs to show? A: isAddNew returns only detail; WORKORDER shows JR_HISTORY & detail; PLANMAINTENANCE shows list & detail; else all except list."}
{"text":"File: AddOrEditAsset.js, Q: What component does getListFromOther return for Work Order versus Plan Maintenance? A: WORKORDER returns <JobRequestHistory/>, otherwise <MaintenancePlan/>."}
{"text":"File: AddOrEditAsset.js, Q: How does getListFromAsset choose which list to render? A: tabIndex 2 → JobRequestHistory; 3 → InspectionHistory; else MaintenancePlan isHistory."}
{"text":"File: AddOrEditAsset.js, Q: What happens when the user switches tabs? A: onTabChange updates tabIndex, causing re-render of the corresponding component."}
{"text":"File: AddOrEditAsset.js, Q: How does getSegments structure the tab view? A: Wraps a SegmentControl inside SegmentWrapper and renders child component below; control is horizontally scrollable."}
{"text":"File: AddOrEditAsset.js, Q: What logic does showTab use to decide what to render? A: isAddNew → DetailTab; else if tabIndex 0 → DetailTab; if otherModule & tabIndex>0 → getListFromOther(); else getListFromAsset(); wrapped by getSegments."}
{"text":"File: AddOrEditAsset.js, Q: How is the screen’s header title determined? A: Passes title={isAddNew?'ADD_ASSET':'AD_AS_DETAIL_ASSET_TITLE'} to BaseLayout."}
{"text":"File: AddOrEditAsset.js, Q: When does the component fetch asset details? A: useEffect watching [id] calls getEmployees() and if id defined getAssetDetail(id); cleanup resets assetDetail."}
{"text":"File: AddOrEditAsset.js, Q: Why does the component call resetAssetDetail on unmount? A: To clear stale asset data when navigating away from add/edit screen."}
{"text":"File: AddOrEditAsset.js, Q: How is the readOnly prop for DetailTab calculated? A: readOnly = !!otherModule; disables fields and hides save when asset belongs to another module."}
{"text":"File: AddOrEditAsset.js, Q: What are the Modules constants used for? A: Enumerations like WORKORDER and PLANMAINTENANCE compared to moduleId to determine tabs and lists."}
{"text":"File: AddOrEditAsset.js, Q: How does dynamicScrolling in SegmentControl affect the UI? A: Allows horizontal scrolling of tabs when there are more tabs than fit."}
{"text":"File: AddOrEditAsset.js, Q: What is different about the UI when adding compared to editing? A: Adding shows only DetailTab with all fields editable; editing shows tab bar and history/detail views."}
{"text":"File: AddOrEditAsset.js, Q: In what situation does the job request history appear in the tab bar? A: If asset.moduleId===Modules.WORKORDER or editing non-module asset with tabIndex 2."}
{"text":"File: AddOrEditAsset.js, Q: What styling does the Wrapper component provide? A: Styled View with flex:1 to fill available space."}
{"text":"File: AddOrEditAsset.js, Q: Why does SegmentWrapper have a negative top margin? A: margin-top:-20px pulls the segment control up to align with header area."}
{"text":"File: AddOrEditAsset.js, Q: How does the screen adjust available tabs for Plan Maintenance assets? A: When moduleId===Modules.PLANMAINTENANCE, tabValues returns only list & detail tabs."}
{"text":"File: AddOrEditAsset.js, Q: What happens when tabIndex is set to 3? A: getListFromAsset returns <InspectionHistory/> to display inspection history."}
{"text":"File: AddOrEditAsset.js, Q: How does the screen decide whether to wrap contents with getSegments? A: isAddNew → direct DetailTab; editing always wraps with getSegments to include tab bar."}
{"text":"File: AddOrEditAsset.js, Q: How are navigation props propagated to child components? A: navigation prop passed down to DetailTab, MaintenancePlan, JobRequestHistory, InspectionHistory for navigation actions."}
{"text":"File: AddOrEditAsset.js, Q: Why is tabIndex initialised to 0? A: Ensures Detail tab is selected by default on load."}
{"text":"File: AddOrEditAsset.js, Q: How are the tabs filtered when the asset is not tied to a module? A: otherModule undefined → all tabs except list returned by tabValues."}
{"text":"File: AddOrEditAsset.js, Q: What does MaintenancePlan receive when rendered from getListFromAsset? A: isHistory prop and navigation to show maintenance plans in historical view."}
{"text":"File: AddOrEditAsset.js, Q: How does the component handle refreshing employee data and asset details? A: First useEffect calls getEmployees() and getAssetDetail(id) on mount or id change."}
{"text":"File: AddOrEditAsset.js, Q: What prevents leftover data from remaining when leaving the screen? A: resetAssetDetail is called in cleanup of the mount useEffect to clear context state."}
{"text":"File: AddOrEditAsset.js, Q: Why is readOnly set to !!otherModule? A: Converts existence of otherModule to boolean to gate editing and save visibility."}
{"text":"File: AddOrEditAsset.js, Q: What determines whether the Add Asset button shows on the header? A: Controlled by routing; this screen only changes title, save button hidden in readOnly mode."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does the component disable the assetType dropdown for imported assets? A: It computes isIMT and passes disabled={isIMT} to the FormLazyDropdown for assetType, preventing changes when true."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What hook provides the form context and validation functions? A: The component uses useCompatibleForm to get formMethods, which wraps react-hook-form with Yup validation."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How are company suggestion selections handled? A: FormSuggestionPicker calls its onSelect callback, which sets company and related fields (companyCode, name, address, phone) via setValue when a company is chosen."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: Where does the assetCreationTime field get its value when embedding an external website? A: It uses qrFeedbackSetting.assetType.creationTime if available, otherwise falls back to assetDetail.creationTime in the simplified view."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does the code ensure price inputs are formatted correctly? A: It uses FormNumberInput for price, binding to price.text and price.rawValue and leveraging locale-configured separators via temperatureOptions-like props."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What pattern does the FormRadioGroup for locationType follow? A: It renders two radio options defined by locationTypes array and writes the selected numeric value (0 or 1) into an array field."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How is form submission feedback handled? A: onSubmit awaits the API call, and upon success navigates back and emits ‘ReloadAsset’ to refresh parent lists; errors rely on upstream error handling."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How are uploaded file previews synchronized into the form? A: A useEffect watches fileUrls; when updated, setValue(‘files’, fileUrls) ensures the form’s files array matches the uploaded list."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: How does the form prevent invalid email entries? A: onCheckEmail calls validateEmail, and if false shows a modal error before clearing or adding the email."}
{"text":"File: AddOrEditAsset/DetailTab.js, Q: What happens to reminder settings when switching between add and edit modes? A: defaultValues sets isActive false and empty users/emails for new assets; getInitialValueForUpdate populates them from assetDetail for edits."}
{"text":"File: AddOrEditAsset.js, Q: How are tabs conditionally rendered based on the asset’s originating module? A: tabValues inspects otherModule (assetDetail.moduleId) and returns different label arrays for WORKORDER, PLANMAINTENANCE, or default cases."}
{"text":"File: AddOrEditAsset.js, Q: How does the component react to changes in the navigation id param? A: A useEffect listening to [id] calls getEmployees() and fetches new asset details via getAssetDetail(id) whenever the route param changes."}
{"text":"File: AddOrEditAsset.js, Q: What role does resetAssetDetail play on unmount? A: It clears the context’s visitorDetail to avoid stale data when returning to the list or navigating elsewhere."}
{"text":"File: AddAttendance.js, Q: How is distance-based disabling of the submit button implemented? A: The computed distance (in metres) is compared to allowed distanceArea; if greater, flatCheck becomes true and disables the button."}
{"text":"File: AddAttendance.js, Q: How does the map region update when the user’s location changes? A: onReceiveLocation constructs a region object from the new coords and calls setRegion to re-center the map."}
{"text":"File: AddAttendance.js, Q: When is the default checkingType switched to check-out? A: A useEffect watches currentLocation.lastActivity.state and sets checkingType to 1 if the last state was already checked in."}
{"text":"File: AddAttendance.js, Q: How does the component display the last check-in time for check-outs? A: If checkingType is 1 and lastTimeCheckIn exists, it renders a hint with that time formatted via moment().format(‘HH:mm:ss’)."}
{"text":"File: VisitorDetail/index.js, Q: How does VisitorDetail determine whether to show the edit button? A: It uses isGranted(‘Visitors.Update’) to conditionally include rightBtn in baseLayoutProps when the permission returns true."}
{"text":"File: VisitorDetail/index.js, Q: What is displayed if visitorDetail is null? A: The component returns BaseLayout with displayPlaceholder=true, showing a loading or empty state until data arrives."}
{"text":"File: VisitorDetail/index.js, Q: How does the component decide between a single tab and two tabs? A: It checks visitorDetail.isActive; if false it shows only VisitorDetailTab, otherwise wraps both tabs in a TabView when true."}