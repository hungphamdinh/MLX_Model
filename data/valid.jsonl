{"text":"Q: Why does the Reminder component initialize newReminderBefore and newReminderAfter to defaultCost? A: To provide a sensible starting value for the number inputs so users see a default before entering custom values."}
{"text":"Q: How does the sanitizeInput function in ConfigRecurrenceModal ensure numeric inputs remain valid? A: It strips trailing dots or commas from the text, preventing invalid characters in numeric fields."}
{"text":"Q: What is the purpose of the term(str, char) helper in ConfigRecurrenceModal? A: It replaces the last character of a string with another, used to sanitize text inputs by removing unwanted punctuation."}
{"text":"Q: Why does attemptSave in useApprovalHandling check config.some(f => f.isAllowApprove)? A: To determine if any changed field requires approval before submitting, showing the modal only when necessary."}
{"text":"Q: How does handlerMap.ids handle missing labels for IDs? A: It filters out undefined results after mapping, so only valid labels are joined in the output string."}
{"text":"Q: What does FormDisabledProvider do when isReadOnly=true? A: It disables all nested form fields by passing down a disabled flag, preventing any user edits."}
{"text":"Q: How does the useEffect in Reminder notify its parent of changes? A: It subscribes via watch and calls onChange(value) on every form update, so the parent receives the latest reminder state."}
{"text":"Q: Why use React.Children.map with clone in FormFieldConfigurable? A: To recursively traverse and inject new props into every nested child element based on config rules."}
{"text":"Q: What role does FieldPrefixProviderâ€™s excludeKeys prop play? A: It lists fieldKeys that should not receive the prefix, allowing selective prefixing control."}
{"text":"Q: How does onChangeTenantId react to isPublic changes? A: It re-fetches team or assignee lists for the current tenant whenever the public/site toggle flips, keeping dropdowns in sync."}
