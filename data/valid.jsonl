{"text":"Q: What does the empty state look like when there are no slots? A: `SlotView` checks `_.size(slots) > 0`; if false, it renders `<EmptySlotMessage>` with text key `BK_NEW_SLOT_EMPTY`."}
{"text":"Q: How are unavailable slots rendered? A: If `item.isAvailable` is false, `SlotView` shows an `<UnavailableSlot>` styled with a grey background and no touch handler, displaying time text only."}
{"text":"Q: How does the component disable form inputs when editing a canceled or declined booking? A: After fetching `bookingDetail`, it checks if `statusCode` is CANCELED or DECLINED and sets `isDisabledForm=true`, which `<FormDisabledProvider>` uses to disable all fields."}
{"text":"Q: How are default form values provided for a new booking? A: Via `initialValues`, including defaults for status (REQUESTED), payment (NOT_YET_DEPOSIT), `bookingType` ([occupier]), empty slots, files, etc."}
{"text":"Q: How does `getInitialValuesForUpdate()` shape the form for editing? A: It maps fields from `bookingDetail` into the same shape as the formâ€™s `defaultValues`, including nested `unit`/`company`/`email` objects based on `bookingType`."}
{"text":"Q: How does the effect on `[bookingSlots]` work? A: When `bookingSlots` updates from API, if `isAddNew`, it sets the form field `slots` to that new array so the slot picker shows available times."}
{"text":"Q: How is the `status` field represented in the payload? A: It takes `formValues.status.statusCode` and assigns it to the `status` key in `payload`."}
{"text":"Q: How are API errors handled during add/update operations? A: Errors in `recurringBooking` are caught and show `Alert.alert('ERROR', error.message)`; similar try/catch could wrap `addBooking`/`updateBooking` to alert the user."}
{"text":"Q: What happens after a successful add or update? A: It emits `DeviceEventEmitter.emit('UpdateListBooking')` to refresh other screens, then calls `navigation.goBack()` to return."}
{"text":"Q: How does the component avoid race conditions between slot fetch and amenity change? A: Effects include `amenityDetail` in their dependency arrays, so `getBookingTimeSlots` runs only when `amenityDetail` is loaded or updated, preventing invalid API calls."}